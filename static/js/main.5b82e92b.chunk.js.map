{"version":3,"sources":["data/heatmap-data.csv","ToolBar.js","plugins/myDeckLayer.js","plugins/mapboxgl-minimapControl.js","Tools.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","this","_div","document","createElement","className","map","_map","parentNode","removeChild","undefined","e","name","callback","btn","innerText","onclick","appendChild","SOURCE_COLOR","TARGET_COLOR","RADIUS_SCALE","d3","domain","range","WIDTH_SCALE","ArcLayer","loadData","data","arcs","counties","pairs","features","forEach","county","i","properties","flows","targetCentroid","centroid","value","gain","loss","Object","keys","toId","pairKey","sourceCentroid","Math","sign","push","target","source","abs","position","net","total","sort","a","b","myDeckLayer","MapboxLayer","type","ScatterplotLayer","id","coutries","opacity","pickable","getRadius","d","getColor","arcsLayer","TripsLayer","trips","getPath","path","getTimestamps","timestamps","vendor","widthMinPixels","rounded","trailLength","currentTime","Date","now","shadowEnabled","getStrokeWidth","getWidth","getTilt","autoHighlight","greatCircle","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","hexagonLayer","HexagonLayer","buslines","radius","coverage","upperPercentile","colorRange","elevationRange","elevationScale","extruded","getPosition","Number","lng","lat","lightSettings","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","Minimap","options","assign","_ticking","_lastMouseMoveEvent","_parentMap","_isDragging","_isCursorOverFeature","_previousPoint","_currentPoint","_trackingRectCoordinates","prototype","mapboxgl","NavigationControl","width","height","style","center","zoom","zoomAdjust","zoomLevels","lineColor","lineWidth","lineOpacity","fillColor","fillOpacity","dragPan","scrollZoom","boxZoom","dragRotate","keyboard","doubleClickZoom","touchZoomRotate","onAdd","parentMap","opts","container","_container","_createContainer","miniMap","_miniMap","Map","attributionControl","maxBounds","setMaxBounds","on","_load","bind","disable","_zoomAdjust","bounds","getBounds","_convertBoundsToPoints","addSource","addLayer","_trackingRect","getSource","_update","_mouseMove","_mouseDown","_mouseUp","_miniMapCanvas","getCanvasContainer","addEventListener","_preventDefault","lngLat","queryRenderedFeatures","point","layers","length","cursor","offset","newBounds","_moveTrackingRect","fitBounds","duration","noMoveStart","_data","_ne","_sw","setData","_setTrackingRectBounds","ne","sw","trc","parentBounds","miniZoom","parseInt","getZoom","parentZoom","levels","found","setZoom","setCenter","getCenter","setAttribute","getContainer","preventDefault","addGeojsonLayer","json","level","provinceid","resourceid","provincedata","getLayer","removeLayer","removeSource","labelLayerId","getStyle","layout","featureinfo","key","VRApp","setState","featuredata","tableshow","coordinates","geometry","pologon","outer","outBoundmax","reduce","pre","cur","bound","min","max","getGeoJsonBound","updateMapTitle","newtitle","mapTitle","_PulsingPointControl","Uint8Array","size","canvas","context","getContext","render","t","performance","outerRadius","clearRect","beginPath","arc","PI","fillStyle","fill","strokeStyle","stroke","getImageData","triggerRepaint","app","flyTo","speed","curve","Controls","draw","removeControl","getElementById","MapboxDraw","displayControlsDefault","updateArea","result","getAll","answer","lastFeature","pop","turf","lineDistance","innerHTML","toFixed","area","rounded_area","round","alert","addControl","visibility","guangdong","ODs","ceil","random","flied","cancelAnimationFrame","moveHandlerId","routeSource","pointSource","route","addRoute","coord1","coord2","feature","featureLine","od","initRoute","distance","segment","along","maxNum","me","next","counter","animate","console","log","line","index","p","bearing","requestAnimationFrame","hotLayer","removeEarthquake","earthquakedata","pulsingDot","addImage","pixelRatio","earthquakes","cluster","clusterMaxZoom","clusterRadius","filter","paint","clusterId","cluster_id","getClusterExpansionZoom","err","easeTo","tsunami","slice","mag","Popup","setLngLat","setHTML","addTo","getCanvas","overview","DrawCrtl","props","MapTitle","title","Table","Reactable","TableContainer","App","state","supported","start","initMap","initControls","INITIAL_VIEW_STATE","accessToken","mymap","pitch","renderingMode","mbxContext","tb","window","Threebox","defaultLights","sphere","color","material","setCoords","sphere2","specular","shininess","add","onRemove","_getcolor","floor","toString","gl","matrix","update","geocoder","MapboxGeocoder","StylesControl","styles","label","styleName","styleUrl","tyleName","dark","hillshading","onChange","CompassControl","ZoomControl","scale","ScaleControl","maxWidth","unit","setUnit","tool","addTool","Tools","location","href","React","Component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b82e92b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heatmap-data.a9c24325.csv\";","export default class Toolbar{\r\n    constructor(){\r\n        // super();\r\n        // this._map = map;\r\n        this._div = document.createElement('div');\r\n        this._div.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\r\n        // this._div.innerText = '  _i_  ';\r\n        // let btn = document.createElement('button');\r\n        // btn.innerText = \"T\";\r\n        // btn.onclick = this.handleClick;\r\n        // this._div.appendChild(btn)\r\n    }\r\n    onAdd(map){\r\n        this._map = map;\r\n        return this._div;\r\n    }\r\n\r\n    onRemove(){\r\n        this._div.parentNode.removeChild(this._div);\r\n        this._map = undefined;\r\n    }\r\n\r\n    handleClick(e){\r\n      \r\n    }\r\n\r\n    addTool(name,callback){\r\n        var name = name?name:\"tool\"\r\n        let btn = document.createElement('button');\r\n        btn.innerText = name;\r\n        btn.onclick = (e) => {callback(this._map,e)};\r\n        this._div.appendChild(btn);\r\n        return this;\r\n    }\r\n\r\n}","import '@deck.gl/core';\r\nimport * as d3 from 'd3';\r\n\r\nimport { ScatterplotLayer, ArcLayer, LineLayer, PathLayer } from '@deck.gl/layers';\r\nimport { HexagonLayer } from '@deck.gl/aggregation-layers';\r\nimport {TripsLayer} from '@deck.gl/geo-layers';\r\nimport { MapboxLayer } from '@deck.gl/mapbox';\r\n\r\nimport trips from '../data/trips.json';\r\nimport coutries from '../data/coutries.json';\r\nimport buslines from '../data/heatmap-data.csv'\r\n\r\n// d3.csv(buslines).then((data)=>{console.log(data)})\r\n// migrate out\r\nconst SOURCE_COLOR = [3, 200, 3, 100];\r\n// migrate in\r\nconst TARGET_COLOR = [166, 3, 3, 100];\r\n// const TARGET_COLOR = [35, 181, 184, 100];\r\nconst RADIUS_SCALE = d3.scaleSqrt().domain([0, 8000]).range([1000, 20000]);\r\nconst WIDTH_SCALE = d3.scaleLinear().domain([0, 1000]).range([1, 4]);\r\n\r\n\r\nclass ArcBrushingLayer extends ArcLayer {\r\n    getShaders() {\r\n        // use customized shaders\r\n        return Object.assign({}, super.getShaders(), {\r\n            inject: {\r\n                'vs:#decl': `\r\nuniform vec2 mousePosition;\r\nuniform float brushRadius;\r\n          `,\r\n                'vs:#main-end': `\r\nfloat brushRadiusPixels = project_scale(brushRadius);\r\n\r\nvec2 sourcePosition = project_position(instancePositions.xy);\r\nbool isSourceInBrush = distance(sourcePosition, mousePosition) <= brushRadiusPixels;\r\n\r\nvec2 targetPosition = project_position(instancePositions.zw);\r\nbool isTargetInBrush = distance(targetPosition, mousePosition) <= brushRadiusPixels;\r\n\r\nif (!isSourceInBrush && !isTargetInBrush) {\r\nvColor.a = 0.0;\r\n}\r\n          `,\r\n                'fs:#main-start': `\r\nif (vColor.a == 0.0) discard;\r\n          `\r\n            }\r\n        });\r\n    }\r\n\r\n    draw(opts) {\r\n        const { brushRadius = 1e6, mousePosition } = this.props;\r\n        // add uniforms\r\n        const uniforms = Object.assign({}, opts.uniforms, {\r\n            brushRadius: brushRadius,\r\n            mousePosition: mousePosition ?\r\n                this.projectPosition(this.unproject(mousePosition)).slice(0, 2) : [0, 0]\r\n        });\r\n        super.draw(Object.assign({}, opts, { uniforms }));\r\n    }\r\n}\r\n// console.log(HexagonLayer)\r\nfunction loadData(data) {\r\n    const arcs = [];\r\n    const counties = [];\r\n    const pairs = {};\r\n\r\n    data.features.forEach((county, i) => {\r\n        const { flows, centroid: targetCentroid } = county.properties;\r\n        const value = { gain: 0, loss: 0 };\r\n\r\n        Object.keys(flows).forEach(toId => {\r\n            value[flows[toId] > 0 ? 'gain' : 'loss'] += flows[toId];\r\n\r\n            const pairKey = i < toId ? `${i}-${toId}` : `${toId}-${i}`;\r\n            const sourceCentroid = data.features[toId].properties.centroid;\r\n            const gain = Math.sign(flows[toId]);\r\n\r\n            // eliminate duplicates arcs\r\n            if (pairs[pairKey]) {\r\n                return;\r\n            }\r\n\r\n            pairs[pairKey] = true;\r\n\r\n            arcs.push({\r\n                target: gain > 0 ? targetCentroid : sourceCentroid,\r\n                source: gain > 0 ? sourceCentroid : targetCentroid,\r\n                value: Math.abs(flows[toId])\r\n            });\r\n        });\r\n\r\n        // add point at arc target\r\n        counties.push({\r\n            ...value,\r\n            position: targetCentroid,\r\n            net: value.gain + value.loss,\r\n            total: value.gain - value.loss,\r\n            name: county.properties.name\r\n        });\r\n    });\r\n\r\n    // sort counties by radius large -> small\r\n    counties.sort((a, b) => Math.abs(b.net) - Math.abs(a.net));\r\n\r\n    // renderLayers({arcs, counties});\r\n    return [counties, arcs];\r\n}\r\n\r\n\r\nconst myDeckLayer = new MapboxLayer({\r\n    type: ScatterplotLayer,\r\n    id: 'counties',\r\n    data: loadData(coutries)[0],\r\n    opacity: 0.5,\r\n    pickable: true,\r\n    // onHover: this._onHover,\r\n    getRadius: d => RADIUS_SCALE(d.total) * 3,\r\n    getColor: d => (d.net > 0 ? TARGET_COLOR : SOURCE_COLOR)\r\n\r\n});\r\n\r\nexport const tripLayer = new MapboxLayer({\r\n    type:TripsLayer,\r\n    id: 'trips',\r\n    data: trips,\r\n    getPath: d => d.path,\r\n    getTimestamps: d => d.timestamps,\r\n    getColor: d => (d.vendor === 0 ? [253, 128, 93] : [23, 184, 190]),\r\n    opacity: 0.3,\r\n    widthMinPixels: 2,\r\n    rounded: true,\r\n    trailLength:180,\r\n    currentTime: (Date.now() / 1000 % 1800) * 30,\r\n\r\n    shadowEnabled: false\r\n});\r\n\r\n const tripsLayer = function(){\r\n\r\n    function _animate() {\r\n        const loopLength = 1800, // unit corresponds to the timestamp in source data\r\n          animationSpeed = 30; // unit time per second\r\n        \r\n        const timestamp = Date.now() / 1000;\r\n        const loopTime = loopLength / animationSpeed;\r\n    \r\n       \r\n          this.time = ((timestamp % loopTime) / loopTime) * loopLength ;\r\n        \r\n        this._animationFrame = window.requestAnimationFrame(_animate);\r\n      }\r\n\r\n    const tripsLayer = new MapboxLayer({\r\n        id: 'trips',\r\n        data: trips,\r\n        getPath: d => d.path,\r\n        getTimestamps: d => d.timestamps,\r\n        getColor: d => (d.vendor === 0 ? [253, 128, 93] : [23, 184, 190]),\r\n        opacity: 0.3,\r\n        widthMinPixels: 2,\r\n        rounded: true,\r\n        trailLength:180,\r\n        currentTime: (Date.now() / 1000 % 1800) * 30,\r\n    \r\n        shadowEnabled: false\r\n    });\r\n}\r\n\r\nexport const arcsLayer = new MapboxLayer({\r\n    type: ArcLayer,\r\n    id: 'arcs',\r\n    data: loadData(coutries)[1],\r\n    // brushRadius: 100000,\r\n    getStrokeWidth: d => WIDTH_SCALE(d.value),\r\n    opacity: 1,\r\n    pickable: true,\r\n    getWidth: 2,\r\n    getTilt:60,\r\n    autoHighlight:true,\r\n    greatCircle:false,\r\n    getSourcePosition: d => d.source,\r\n    getTargetPosition: d => d.target,\r\n    getSourceColor: SOURCE_COLOR,\r\n    getTargetColor: TARGET_COLOR\r\n});\r\n\r\n\r\n\r\nconst _hexagonLayer = function () {\r\n    const DATA_URL = '../data/heatmap-data.csv';\r\n    // const OPTIONS = ['radius', 'coverage', 'upperPercentile'];\r\n    const COLOR_RANGE = [\r\n        [1, 152, 189],\r\n        [73, 227, 206],\r\n        [216, 254, 181],\r\n        [254, 237, 177],\r\n        [254, 173, 84],\r\n        [209, 55, 78]\r\n    ];\r\n    const LIGHT_SETTINGS = {\r\n        lightsPosition: [-0.144528, 49.739968, 8000, -3.807751, 54.104682, 8000],\r\n        ambientRatio: 0.4,\r\n        diffuseRatio: 0.6,\r\n        specularRatio: 0.2,\r\n        lightsStrength: [0.8, 0.0, 0.8, 0.0],\r\n        numberOfLights: 2\r\n    };\r\n    return new MapboxLayer({\r\n        type: HexagonLayer,\r\n        id: 'heatmap',\r\n        data: d3.csv(buslines),\r\n        radius: 1000,\r\n        coverage: 1,\r\n        upperPercentile: 100,\r\n        colorRange: COLOR_RANGE,\r\n        elevationRange: [0, 1000],\r\n        elevationScale: 250,\r\n        extruded: true,\r\n        getPosition: d => [Number(d.lng), Number(d.lat)],\r\n        lightSettings: LIGHT_SETTINGS,\r\n        opacity: 1\r\n    })\r\n}\r\n\r\nexport const hexagonLayer = _hexagonLayer();\r\nexport default myDeckLayer;","import mapboxgl from 'mapbox-gl';\r\n function Minimap ( options )\r\n{\r\n\tObject.assign(this.options, options);\r\n\r\n\tthis._ticking = false;\r\n\tthis._lastMouseMoveEvent = null;\r\n\tthis._parentMap = null;\r\n\tthis._isDragging = false;\r\n\tthis._isCursorOverFeature = false;\r\n\tthis._previousPoint = [0, 0];\r\n\tthis._currentPoint = [0, 0];\r\n\tthis._trackingRectCoordinates = [[[], [], [], [], []]];\r\n}\r\n\r\nMinimap.prototype = Object.assign({}, mapboxgl.NavigationControl.prototype, {\r\n\r\n\toptions: {\r\n\t\tid: \"mapboxgl-minimap\",\r\n\t\twidth: \"320px\",\r\n\t\theight: \"180px\",\r\n\t\tstyle: \"mapbox://styles/mapbox/streets-v8\",\r\n\t\tcenter: [0, 0],\r\n\t\tzoom: 6,\r\n\r\n\t\t// should be a function; will be bound to Minimap\r\n\t\tzoomAdjust: null,\r\n\r\n\t\t// if parent map zoom >= 18 and minimap zoom >= 14, set minimap zoom to 16\r\n\t\tzoomLevels: [\r\n\t\t\t[18, 14, 16],\r\n\t\t\t[16, 12, 14],\r\n\t\t\t[14, 10, 12],\r\n\t\t\t[12, 8, 10],\r\n\t\t\t[10, 6, 8]\r\n\t\t],\r\n\r\n\t\tlineColor: \"#08F\",\r\n\t\tlineWidth: 1,\r\n\t\tlineOpacity: 1,\r\n\r\n\t\tfillColor: \"#F80\",\r\n\t\tfillOpacity: 0.25,\r\n\r\n\t\tdragPan: false,\r\n\t\tscrollZoom: false,\r\n\t\tboxZoom: false,\r\n\t\tdragRotate: false,\r\n\t\tkeyboard: false,\r\n\t\tdoubleClickZoom: false,\r\n\t\ttouchZoomRotate: false\r\n\t},\r\n\r\n\tonAdd: function ( parentMap )\r\n\t{\r\n\t\tthis._parentMap = parentMap;\r\n\t\tvar opts = this.options;\r\n\t\tvar container = this._container = this._createContainer(parentMap);\r\n\t\tvar miniMap = this._miniMap = new mapboxgl.Map({\r\n\t\t\tattributionControl: false,\r\n\t\t\tcontainer: container,\r\n\t\t\tstyle: opts.style,\r\n\t\t\tzoom: opts.zoom,\r\n\t\t\tcenter: opts.center\r\n\t\t});\r\n\r\n\t\tif (opts.maxBounds) miniMap.setMaxBounds(opts.maxBounds);\r\n\r\n\t\tminiMap.on(\"load\", this._load.bind(this));\r\n\r\n\t\treturn this._container;\r\n\t},\r\n\r\n\r\n\r\n\t_load: function ()\r\n\t{\r\n\t\tvar opts = this.options;\r\n\t\tvar parentMap = this._parentMap;\r\n\t\tvar miniMap = this._miniMap;\r\n\t\tvar interactions = [\r\n\t\t\t\"dragPan\", \"scrollZoom\", \"boxZoom\", \"dragRotate\",\r\n\t\t\t\"keyboard\", \"doubleClickZoom\", \"touchZoomRotate\"\r\n\t\t];\r\n\r\n\t\tinteractions.forEach(function(i){\r\n\t\t\tif( opts[i] !== true ) {\r\n\t\t\t\tminiMap[i].disable();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif( typeof opts.zoomAdjust === \"function\" ) {\r\n\t\t\tthis.options.zoomAdjust = opts.zoomAdjust.bind(this);\r\n\t\t} else if( opts.zoomAdjust === null ) {\r\n\t\t\tthis.options.zoomAdjust = this._zoomAdjust.bind(this);\r\n\t\t}\r\n\r\n\t\tvar bounds = miniMap.getBounds();\r\n\r\n\t\tthis._convertBoundsToPoints(bounds);\r\n\r\n\t\tminiMap.addSource(\"trackingRect\", {\r\n\t\t\t\"type\": \"geojson\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"type\": \"Feature\",\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"name\": \"trackingRect\"\r\n\t\t\t\t},\r\n\t\t\t\t\"geometry\": {\r\n\t\t\t\t\t\"type\": \"Polygon\",\r\n\t\t\t\t\t\"coordinates\": this._trackingRectCoordinates\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tminiMap.addLayer({\r\n\t\t\t\"id\": \"trackingRectOutline\",\r\n\t\t\t\"type\": \"line\",\r\n\t\t\t\"source\": \"trackingRect\",\r\n\t\t\t\"layout\": {},\r\n\t\t\t\"paint\": {\r\n\t\t\t\t\"line-color\": opts.lineColor,\r\n\t\t\t\t\"line-width\": opts.lineWidth,\r\n\t\t\t\t\"line-opacity\": opts.lineOpacity\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// needed for dragging\r\n\t\tminiMap.addLayer({\r\n\t\t\t\"id\": \"trackingRectFill\",\r\n\t\t\t\"type\": \"fill\",\r\n\t\t\t\"source\": \"trackingRect\",\r\n\t\t\t\"layout\": {},\r\n\t\t\t\"paint\": {\r\n\t\t\t\t\"fill-color\": opts.fillColor,\r\n\t\t\t\t\"fill-opacity\": opts.fillOpacity\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._trackingRect = this._miniMap.getSource(\"trackingRect\");\r\n\r\n\t\tthis._update();\r\n\r\n\t\tparentMap.on(\"move\", this._update.bind(this));\r\n\r\n\t\tminiMap.on(\"mousemove\", this._mouseMove.bind(this));\r\n\t\tminiMap.on(\"mousedown\", this._mouseDown.bind(this));\r\n\t\tminiMap.on(\"mouseup\", this._mouseUp.bind(this));\r\n\r\n\t\tminiMap.on(\"touchmove\", this._mouseMove.bind(this));\r\n\t\tminiMap.on(\"touchstart\", this._mouseDown.bind(this));\r\n\t\tminiMap.on(\"touchend\", this._mouseUp.bind(this));\r\n\r\n\t\tthis._miniMapCanvas = miniMap.getCanvasContainer();\r\n\t\tthis._miniMapCanvas.addEventListener(\"wheel\", this._preventDefault);\r\n\t\tthis._miniMapCanvas.addEventListener(\"mousewheel\", this._preventDefault);\r\n\t},\r\n\r\n\t_mouseDown: function ( e )\r\n\t{\r\n\t\tif( this._isCursorOverFeature )\r\n\t\t{\r\n\t\t\tthis._isDragging = true;\r\n\t\t\tthis._previousPoint = this._currentPoint;\r\n\t\t\tthis._currentPoint = [e.lngLat.lng, e.lngLat.lat];\r\n\t\t}\r\n\t},\r\n\r\n\t_mouseMove: function (e)\r\n\t{\r\n\t\tthis._ticking = false;\r\n\r\n\t\tvar miniMap = this._miniMap;\r\n\t\tvar features = miniMap.queryRenderedFeatures(e.point, {\r\n\t\t\tlayers: [\"trackingRectFill\"]\r\n\t\t});\r\n\r\n\t\t// don't update if we're still hovering the area\r\n\t\tif( ! (this._isCursorOverFeature && features.length > 0) )\r\n\t\t{\r\n\t\t\tthis._isCursorOverFeature = features.length > 0;\r\n\t\t\tthis._miniMapCanvas.style.cursor = this._isCursorOverFeature ? \"move\" : \"\";\r\n\t\t}\r\n\r\n\t\tif( this._isDragging )\r\n\t\t{\r\n\t\t\tthis._previousPoint = this._currentPoint;\r\n\t\t\tthis._currentPoint = [e.lngLat.lng, e.lngLat.lat];\r\n\r\n\t\t\tvar offset = [\r\n\t\t\t\tthis._previousPoint[0] - this._currentPoint[0],\r\n\t\t\t\tthis._previousPoint[1] - this._currentPoint[1]\r\n\t\t\t];\r\n\r\n\t\t\tvar newBounds = this._moveTrackingRect(offset);\r\n\r\n\t\t\tthis._parentMap.fitBounds(newBounds, {\r\n\t\t\t\tduration: 80,\r\n\t\t\t\tnoMoveStart: true\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_mouseUp: function ()\r\n\t{\r\n\t\tthis._isDragging = false;\r\n\t\tthis._ticking = false;\r\n\t},\r\n\r\n\t_moveTrackingRect: function ( offset )\r\n\t{\r\n\t\tvar source = this._trackingRect;\r\n\t\tvar data = source._data;\r\n\t\tvar bounds = data.properties.bounds;\r\n\r\n\t\tbounds._ne.lat -= offset[1];\r\n\t\tbounds._ne.lng -= offset[0];\r\n\t\tbounds._sw.lat -= offset[1];\r\n\t\tbounds._sw.lng -= offset[0];\r\n\r\n\t\tthis._convertBoundsToPoints(bounds);\r\n\t\tsource.setData(data);\r\n\r\n\t\treturn bounds;\r\n\t},\r\n\r\n\t_setTrackingRectBounds: function ( bounds )\r\n\t{\r\n\t\tvar source = this._trackingRect;\r\n\t\tvar data = source._data;\r\n\r\n\t\tdata.properties.bounds = bounds;\r\n\t\tthis._convertBoundsToPoints(bounds);\r\n\t\tsource.setData(data);\r\n\t},\r\n\r\n\t_convertBoundsToPoints: function ( bounds )\r\n\t{\r\n\t\tvar ne = bounds._ne;\r\n\t\tvar sw = bounds._sw;\r\n\t\tvar trc = this._trackingRectCoordinates;\r\n\r\n\t\ttrc[0][0][0] = ne.lng;\r\n\t\ttrc[0][0][1] = ne.lat;\r\n\t\ttrc[0][1][0] = sw.lng;\r\n\t\ttrc[0][1][1] = ne.lat;\r\n\t\ttrc[0][2][0] = sw.lng;\r\n\t\ttrc[0][2][1] = sw.lat;\r\n\t\ttrc[0][3][0] = ne.lng;\r\n\t\ttrc[0][3][1] = sw.lat;\r\n\t\ttrc[0][4][0] = ne.lng;\r\n\t\ttrc[0][4][1] = ne.lat;\r\n\t},\r\n\r\n\t_update: function ( e )\r\n\t{\r\n\t\tif( this._isDragging  ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar parentBounds = this._parentMap.getBounds();\r\n\r\n\t\tthis._setTrackingRectBounds(parentBounds);\r\n\r\n\t\tif( typeof this.options.zoomAdjust === \"function\" ) {\r\n\t\t\tthis.options.zoomAdjust();\r\n\t\t}\r\n\t},\r\n\r\n\t_zoomAdjust: function ()\r\n\t{\r\n\t\tvar miniMap = this._miniMap;\r\n\t\tvar parentMap = this._parentMap;\r\n\t\tvar miniZoom = parseInt(miniMap.getZoom(), 10);\r\n\t\tvar parentZoom = parseInt(parentMap.getZoom(), 10);\r\n\t\tvar levels = this.options.zoomLevels;\r\n\t\tvar found = false;\r\n\r\n\t\tlevels.forEach(function(zoom)\r\n\t\t{\r\n\t\t\tif( ! found && parentZoom >= zoom[0] )\r\n\t\t\t{\r\n\t\t\t\tif( miniZoom >= zoom[1] ) {\r\n\t\t\t\t\tminiMap.setZoom(zoom[2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminiMap.setCenter(parentMap.getCenter());\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif( ! found && miniZoom !== this.options.zoom )\r\n\t\t{\r\n\t\t\tif( typeof this.options.bounds === \"object\" ) {\r\n\t\t\t\tminiMap.fitBounds(this.options.bounds, {duration: 50});\r\n\t\t\t}\r\n\r\n\t\t\tminiMap.setZoom(this.options.zoom)\r\n\t\t}\r\n\t},\r\n\r\n\t_createContainer: function ( parentMap )\r\n\t{\r\n\t\tvar opts = this.options;\r\n\t\tvar container = document.createElement(\"div\");\r\n\r\n\t\tcontainer.className = \"mapboxgl-ctrl-minimap mapboxgl-ctrl\";\r\n\t\tcontainer.setAttribute('style', 'width: ' + opts.width + '; height: ' + opts.height + ';');\r\n\t\tcontainer.addEventListener(\"contextmenu\", this._preventDefault);\r\n\r\n\t\tparentMap.getContainer().appendChild(container);\r\n\r\n\t\tif( opts.id !== \"\" ) {\r\n\t\t\tcontainer.id = opts.id;\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t},\r\n\r\n\t_preventDefault: function ( e ) {\r\n\t\te.preventDefault();\r\n\t}\r\n});\r\n\r\n\r\n\r\nexport default Minimap;\r\n\r\n\r\n","import MapboxDraw from 'mapbox-gl-draw';\r\nimport turf from 'turf';\r\nimport { Popup } from 'mapbox-gl';\r\nimport 'mapbox-gl-draw/dist/mapbox-gl-draw.css'\r\n// import turf from 'turf';\r\nimport './DrawControInfo.css';\r\n// import { map } from 'd3';\r\n\r\nimport myDeckLayer, { hexagonLayer, arcsLayer, tripLayer } from './plugins/myDeckLayer';\r\nimport earthquakedata from './data/earthquakes.json';\r\nimport Minimap from './plugins/mapboxgl-minimapControl';\r\n\r\n\r\nimport provincedata from './data/chinamap.json';\r\nimport guangdong from './data/guangdong.json';\r\n\r\nfunction addBuilding(map) {\r\n  let app = {};\r\n  // debugger;\r\n  // let map =  app.map;\r\n\r\n  if (map.getLayer(\"3d-buildings\")) {\r\n    return;\r\n  }\r\n  map.flyTo({\r\n    center: [121.50, 31.24],\r\n    zoom: 16,\r\n    speed: 2,\r\n    curve: 1,\r\n\r\n  })\r\n  var layers = map.getStyle().layers;\r\n\r\n  // var labelLayerId;\r\n  for (var i = 0; i < layers.length; i++) {\r\n    if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\r\n      app.labelLayerId = layers[i].id;\r\n      break;\r\n    }\r\n  }\r\n  map.addLayer({\r\n    'id': '3d-buildings',\r\n    'source': 'composite',\r\n    'source-layer': 'building',\r\n    'filter': ['==', 'extrude', 'true'],\r\n    'type': 'fill-extrusion',\r\n    'minzoom': 13,\r\n    'paint': {\r\n      'fill-extrusion-color': [\r\n        \"interpolate\", [\"linear\"], [\"get\", \"height\"],\r\n        0, \"green\",\r\n        10.05, \"red\",\r\n        100, \"yellow\"\r\n      ],\r\n\r\n      // 使用“插值”表达式为\r\n      // 建筑物作为用户放大\r\n      'fill-extrusion-height': [\r\n        \"interpolate\", [\"linear\"], [\"zoom\"],\r\n        15, 100,\r\n        15.05, [\"get\", \"height\"]\r\n      ],\r\n      'fill-extrusion-base': [\r\n        \"interpolate\", [\"linear\"], [\"zoom\"],\r\n        15, 0,\r\n        15.05, [\"get\", \"min_height\"]\r\n      ],\r\n      'fill-extrusion-opacity': .6\r\n    }\r\n  }, app.labelLayerId);\r\n\r\n}\r\n\r\n\r\nfunction drawControl(map) {\r\n  map.Controls = map.Controls ? map.Controls : {};\r\n  if (map.Controls.draw) {\r\n    map.removeControl(map.Controls.draw);\r\n    hideDrawBox();\r\n    map.Controls.draw = undefined;\r\n    return;\r\n  } else {\r\n    var draw = new MapboxDraw({\r\n      displayControlsDefault: true,\r\n      // controls: {\r\n      // polygon: true,\r\n      // trash: true\r\n      // }\r\n    });\r\n    map.addControl(draw);\r\n    showDrawBox()\r\n    map.Controls.draw = draw;\r\n\r\n    map.on('draw.create', updateArea);\r\n    map.on('draw.delete', updateArea);\r\n    map.on('draw.update', updateArea);\r\n\r\n  }\r\n\r\n  function updateArea(e) {\r\n\r\n    var data = draw.getAll();\r\n    var answer = document.getElementById('calculated-area');\r\n    var result;\r\n    if (data.features.length > 0) {\r\n      let lastFeature = data.features.pop();\r\n\r\n      switch (lastFeature.geometry.type) {\r\n        case \"LineString\":\r\n          result = turf.lineDistance(lastFeature);\r\n          // result = calculateLength(json);\r\n          answer.innerHTML =\r\n            '<p><strong>' +\r\n            result.toFixed(2) +\r\n            '</strong></p><p>千米</p>';\r\n          break;\r\n        case \"Polygon\":\r\n          let json = {}\r\n          json.features = [];\r\n          json.type = \"FeatureCollection\";\r\n          json.features.push(lastFeature);\r\n          result = turf.area(json);\r\n          // var area = turf.area(data);\r\n          // restrict to area to 2 decimal points\r\n          var rounded_area = Math.round(result * 100) / 100;\r\n          answer.innerHTML =\r\n            '<p><strong>' +\r\n            rounded_area +\r\n            '</strong></p><p>平方米</p>';\r\n          break;\r\n        case \"Point\":\r\n          result = lastFeature.geometry.coordinates;\r\n          answer.innerHTML = \"lng: \" + result[0].toFixed(2) + \";<br> lat:\" + result[1].toFixed(2);\r\n\r\n          break;\r\n        default:\r\n          break;\r\n\r\n      }\r\n\r\n    } else {\r\n      answer.innerHTML = '';\r\n      if (e.type !== 'draw.delete')\r\n        alert('Use the draw tools to draw a polygon!');\r\n    }\r\n  }\r\n\r\n  function hideDrawBox() {\r\n    let box = document.getElementById(\"calculation-box\");\r\n    box.setAttribute(\"style\", \"visibility:hidden\")\r\n    // box.style.visibility = \"hidden\";\r\n  }\r\n  function showDrawBox() {\r\n    let box = document.getElementById(\"calculation-box\");\r\n    box.style.visibility = \"visible\";\r\n  }\r\n\r\n}\r\n\r\nfunction addGeojsonLayer(map, json, level) {\r\n  //add level parameter to judge the country or province level\r\n  let provinceid = \"province\";\r\n  let resourceid = \"province\";\r\n  let data = provincedata;\r\n\r\n\r\n  if (level) {\r\n    provinceid = level;\r\n    resourceid = level;\r\n    data = json;\r\n\r\n  }\r\n  if (map.getLayer(provinceid)) {\r\n    map.removeLayer(provinceid).removeSource(resourceid);\r\n    return;\r\n  }\r\n  var layers = map.getStyle().layers;\r\n  var labelLayerId;\r\n  for (var i = 0; i < layers.length; i++) {\r\n    if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\r\n      labelLayerId = layers[i].id;\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  map.addSource(resourceid, {\r\n    'type': 'geojson',\r\n    'data': data\r\n  })\r\n\r\n\r\n  map.addLayer({\r\n    id: provinceid,\r\n    'source': resourceid,\r\n    // 'source-layer': 'cn_sheng_polygon',\r\n    'type': 'fill',\r\n    'paint': {\r\n      \"fill-outline-color\": \"rgba(3,3,3,50)\",\r\n      \"fill-opacity\": 0.3,\r\n      \"fill-color\": \"rgba(255,255,255,0)\"\r\n    },\r\n  }, labelLayerId);\r\n  // var me = this;\r\n  map.on(\"click\", provinceid, (e) => {\r\n    if (e.features.length < 1) {\r\n      return\r\n    };\r\n\r\n    let properties = e.features[0].properties;\r\n    //图层过滤器\r\n    //map.setFilter(provinceid,[\"in\",\"SHENG_ID\",properties.SHENG_ID])\r\n\r\n    let featureinfo = [];\r\n    Object.keys(properties).map((key) => {\r\n      let data = {};\r\n      data[\"字段\"] = key;\r\n      data[\"值\"] = properties[key];\r\n      featureinfo.push(data);\r\n    });\r\n\r\n    map.VRApp.setState({ featuredata: featureinfo, tableshow: true });\r\n\r\n    function getGeoJsonBound(e) {\r\n      // get feature bounds\r\n      let coordinates = e.features[0].geometry.coordinates;\r\n      let type = e.features[0].geometry.type;\r\n\r\n      let bounds = coordinates.map((pologon) => {\r\n        let outer = pologon[0]; //strange enough , if type == pologon outring is pologon itself\r\n        if (pologon.length >= 2) {\r\n          outer = pologon\r\n        }\r\n        let outBoundmax = outer.reduce((pre, cur) => {\r\n          let lng = pre[0] > cur[0] ? pre[0] : cur[0];\r\n          let lat = pre[1] > cur[1] ? pre[1] : cur[1];\r\n          return [lng, lat]\r\n        }, [0, 0])\r\n\r\n        let outBoundmin = outer.reduce((pre, cur) => {\r\n          let lng = pre[0] < cur[0] ? pre[0] : cur[0];\r\n          let lat = pre[1] < cur[1] ? pre[1] : cur[1];\r\n          return [lng, lat]\r\n        })\r\n        return [outBoundmin, outBoundmax]\r\n      })\r\n\r\n      let bound = bounds.reduce((bound, cur) => {\r\n        let minLng = Math.min(cur[0][0], cur[1][0], bound[0][0], bound[1][0]);\r\n        let minLat = Math.min(cur[0][1], cur[1][1], bound[0][1], bound[1][1]);\r\n        let maxLng = Math.max(cur[0][0], cur[1][0], bound[0][0], bound[1][0]);\r\n        let maxLat = Math.max(cur[0][1], cur[1][1], bound[0][1], bound[1][1]);\r\n        return [[minLng, minLat], [maxLng, maxLat]]\r\n      })\r\n\r\n      return bound\r\n\r\n    }\r\n\r\n    // console.log(bound);\r\n\r\n\r\n    map.fitBounds(getGeoJsonBound(e));\r\n\r\n  })\r\n\r\n}\r\n//add province layer \r\nfunction addProvince(map) {\r\n  addGeojsonLayer(map);\r\n  addGeojsonLayer(map, guangdong, 'guangdong');\r\n\r\n}\r\n\r\nfunction addHexagonLayer(map) {\r\n  map.addLayer(hexagonLayer, 'waterway-label')\r\n  map.flyTo({\r\n    center: [-2.67, 52.74]\r\n  });\r\n  // debugger;\r\n\r\n  updateMapTitle(map, '英国交通事故地图')\r\n}\r\n\r\nfunction addEaseLayer(map) {\r\n  map.addLayer(arcsLayer, 'waterway-label');\r\n  map.addLayer(myDeckLayer, 'waterway-label');\r\n\r\n  map.flyTo({\r\n    center: [-92.67, 35.74]\r\n  });\r\n  updateMapTitle(map, '美国居民迁徙地图')\r\n}\r\n\r\nfunction ODFly(map) {\r\n  updateMapTitle(map, '全国航班飞行地图')\r\n\r\n  //Math.ceil(Math.random()*15);   \r\n  //center:【120，30】\r\n  let center = [121.81, 31.152]\r\n  let ODs = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    ODs.push([[center[0], center[1]], [center[0] - Math.ceil(Math.random() * 20), center[1] + Math.ceil(Math.random() * 20)]])\r\n  }\r\n\r\n\r\n  ODs.push([[112.0, 22.0], [115.34, 40.04]])\r\n  ODs.push([[113.0, 22.0], [115.34, 40.04]])\r\n  ODs.push([[115.0, 22.0], [115.34, 40.04]])\r\n\r\n  ODs.push([[121.28, 31.31], [102.47, 18.87]])\r\n  ODs.push([[104.24, 30.716], [102.47, 18.87]])\r\n  ODs.push([[113.64, 23.27], [102.47, 18.87]])\r\n  ODs.push([[114.09, 30.07], [102.47, 18.87]])\r\n\r\n  let app = map.VRApp;\r\n  let routeSource = \"flyRoute\";\r\n  let pointSource = \"flyPoint\";\r\n  let routeLayerId = routeSource + \"Layer\";\r\n  let pointLayerId = pointSource + \"Layer\";\r\n  if (app.flied) {\r\n\r\n    cancelAnimationFrame(app.moveHandlerId);\r\n    // remove layers\r\n    // var layers = map.getStyle().layers;\r\n\r\n    // var flys = layers.filter((lay) => lay.id.indexOf('fly') == 0)\r\n\r\n    // flys.map((layer) => map.removeLayer(layer));\r\n    map.removeLayer(routeLayerId);\r\n    map.removeLayer(pointLayerId);\r\n    map.removeSource(routeSource)\r\n    map.removeSource(pointSource)\r\n    // var sources = map.getStyle().sources;\r\n    // // Object.keys(sources)\r\n    // var srcs = Object.keys(sources).filter((src) => src.indexOf('fly') == 0)\r\n\r\n    // srcs.map((src) => map.removeSource(src));\r\n    app.flied = false;\r\n    return;\r\n  }\r\n  app.flied = true;\r\n\r\n  // San Francisco\r\n  var origin = origin ? origin : [-122.414, 37.776];\r\n\r\n  // Washington DC\r\n  var destination = destination ? destination : [-77.032, 38.913];\r\n\r\n  // A simple line from origin to destination.\r\n  var route = {\r\n    'type': 'FeatureCollection',\r\n    'features': [\r\n      // {\r\n      //   'type': 'Feature',\r\n      //   'geometry': {\r\n      //     'type': 'LineString',\r\n      //     'coordinates': [origin, destination]\r\n      //   }\r\n      // }\r\n    ]\r\n  };\r\n\r\n  var featureLine = function (coord1, coord2) {\r\n    return {\r\n      \"type\": \"Feature\",\r\n      'geometry': {\r\n        'type': 'LineString',\r\n        'coordinates': [coord1, coord2]\r\n      }\r\n    }\r\n  }\r\n\r\n  function _addFeatureToRoute(feature) {\r\n\r\n    route.features.push(feature)\r\n  }\r\n\r\n  function addRoute(coord1, coord2) {\r\n    _addFeatureToRoute(featureLine(coord1, coord2));\r\n\r\n  }\r\n\r\n\r\n  ///test[112.98, 22.16], [116.34, 40.04]\r\n  // route.features.pop();\r\n  ODs.map((od) => {\r\n    addRoute(od[0], od[1]);\r\n\r\n  })\r\n  // addRoute([112.0, 22.0], [115.34, 40.04]);\r\n  // addRoute([111.0, 22.0], [115.34, 40.04]);\r\n  // addRoute([112.0, 21.0], [115.34, 40.04]);\r\n\r\n  const initRoute = Object.assign({}, route);\r\n\r\n  // A single point that animates along the route.\r\n  // Coordinates are initially set to origin.\r\n  var point = {\r\n    'type': 'FeatureCollection',\r\n    'features': [\r\n      // {\r\n      //   'type': 'Feature',\r\n      //   'properties': {},\r\n      //   'geometry': {\r\n      //     'type': 'Point',\r\n      //     'coordinates': origin\r\n      //   }\r\n      // }\r\n    ]\r\n  };\r\n  var step = 100;\r\n  let stepDistance = 4;\r\n  // point.features.pop();\r\n  function _updateroute() {\r\n    // var distances = [],arcs = [];\r\n    route.features.map((feature) => {\r\n      let distance = turf.lineDistance(feature, 'kilometers');\r\n      // distances.push(distance);\r\n      let arc = [];\r\n      // const step = 500;\r\n      // let stepDistance = distance / step;\r\n\r\n      for (let i = 0; i < distance; i += stepDistance) {\r\n        let segment = turf.along(feature, i, 'kilometers');\r\n        arc.push(segment.geometry.coordinates);\r\n      }\r\n      // arcs.push(arc);\r\n      feature.geometry.coordinates = arc;\r\n      //update point ,add each line start point to point\r\n      point.features.push({\r\n        'type': 'Feature',\r\n        'properties': {},\r\n        \"geometry\": {\r\n          'type': 'Point',\r\n          'coordinates': arc[0]\r\n        }\r\n      });\r\n\r\n    })\r\n\r\n  }\r\n\r\n  _updateroute();\r\n  // // Calculate the distance in kilometers between route start/end point.\r\n  // var lineDistance = turf.lineDistance(route.features[0], 'kilometers');\r\n\r\n  // var arc = [];\r\n\r\n  // // Number of steps to use in the arc and animation, more steps means\r\n  // // a smoother arc and animation, but too many steps will result in a\r\n  // // low frame rate\r\n  // var steps = 500;\r\n\r\n  // // Draw an arc between the `origin` & `destination` of the two points\r\n  // for (var i = 0; i < lineDistance; i += lineDistance / steps) {\r\n  //   var segment = turf.along(route.features[0], i, 'kilometers');\r\n  //   arc.push(segment.geometry.coordinates);\r\n  // }\r\n\r\n  // // Update the route with calculated arc coordinates\r\n  // route.features[0].geometry.coordinates = arc;\r\n\r\n  // // Used to increment the value of the point measurement against the route.\r\n  // let routeSource = \"flyRoute\" ;\r\n  // // let routeSource = \"fly\" + (Math.random() + Date.now()).toString();\r\n  // let pointSource = \"flyPoint\" ;\r\n  // // let pointSource = \"fly\" + (Math.random() + Date.now()).toString();\r\n  // let routeLayerId = routeSource + \"Layer\";\r\n  // let pointLayerId = pointSource + \"Layer\";\r\n\r\n\r\n  map.addSource(routeSource, {\r\n    'type': 'geojson',\r\n    'data': initRoute\r\n  });\r\n\r\n\r\n\r\n  map.addSource(pointSource, {\r\n    'type': 'geojson',\r\n    'data': point\r\n  });\r\n\r\n  map.addLayer({\r\n    'id': routeLayerId,\r\n    'source': routeSource,\r\n    'type': 'line',\r\n    'paint': {\r\n      'line-width': 1.5,\r\n      'line-color': 'rgba(160, 32, 240, 1)',\r\n      'line-blur': 1\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    'id': pointLayerId,\r\n    'source': pointSource,\r\n    'type': 'symbol',\r\n    'layout': {\r\n      'icon-image': 'airport-15',\r\n      'icon-rotate': ['get', 'bearing'],\r\n      'icon-rotation-alignment': 'map',\r\n      'icon-allow-overlap': true,\r\n      'icon-ignore-placement': true\r\n    }\r\n  });\r\n\r\n  const maxNum = route.features.reduce((me, next) => {\r\n    return me > next.geometry.coordinates.length ? me : next.geometry.coordinates.length\r\n  })\r\n  var counter = 0;\r\n  var moveHandlerId;\r\n  function animate(t) {\r\n    console.log(counter)\r\n    // console.log(t,'time');\r\n\r\n    if (counter > maxNum) {\r\n      cancelAnimationFrame(app.moveHandlerId);\r\n      alert(\"done\")\r\n      return;\r\n    }\r\n    route.features.map((line, index) => {\r\n      let p = point.features[index];\r\n      // console.log(counter, index)\r\n      if (line.geometry.coordinates.length > counter) {\r\n        p.geometry.coordinates = line.geometry.coordinates[counter];\r\n        p.properties.bearing = turf.bearing(\r\n          turf.point(line.geometry.coordinates[0]),\r\n          turf.point(line.geometry.coordinates[1])\r\n        )\r\n      }\r\n\r\n    });\r\n\r\n    // Update the source with this new data.\r\n    map.getSource(pointSource).setData(point);\r\n\r\n    // // Request the next frame of animation so long the end has not been reached.\r\n    // if (counter < step) {\r\n    app.moveHandlerId = requestAnimationFrame(animate);\r\n    // }\r\n    counter = counter + 1;\r\n  }\r\n\r\n  animate();\r\n  // return moveHandlerId;\r\n\r\n}\r\n\r\nfunction addHotLayer(map) {\r\n  let app = map.VRApp;\r\n  if (app.hotLayer) {\r\n\r\n    removeEarthquake();\r\n    updateMapTitle(map, \"\")\r\n    app.hotLayer = false;\r\n\r\n  } else {\r\n    earthquakes();\r\n\r\n    updateMapTitle(map, '地震热力地图')\r\n    app.hotLayer = true;\r\n  }\r\n  function earthquakes() {\r\n\r\n    map.addSource(\"earthquakes\", {\r\n      \"type\": \"geojson\",\r\n      \"data\": earthquakedata,\r\n      // cluster: true,\r\n      // clusterMaxZoom: 14, // Max zoom to cluster points on\r\n      // clusterRadius: 50 \r\n    });\r\n\r\n\r\n    map.addLayer({\r\n      'id': 'earthquakes-heat',\r\n      'type': 'heatmap',\r\n      'source': 'earthquakes',\r\n      'maxzoom': 9,\r\n      'paint': {\r\n        // Increase the heatmap weight based on frequency and property magnitude\r\n        'heatmap-weight': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['get', 'mag'],\r\n          0,\r\n          0,\r\n          6,\r\n          1\r\n        ],\r\n        // Increase the heatmap color weight weight by zoom level\r\n        // heatmap-intensity is a multiplier on top of heatmap-weight\r\n        'heatmap-intensity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          1,\r\n          9,\r\n          3\r\n        ],\r\n        // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n        // Begin color ramp at 0-stop with a 0-transparancy color\r\n        // to create a blur-like effect.\r\n        'heatmap-color': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['heatmap-density'],\r\n          0,\r\n          'rgba(33,102,172,0)',\r\n          0.2,\r\n          'rgb(103,169,207)',\r\n          0.4,\r\n          'rgb(209,229,240)',\r\n          0.6,\r\n          'rgb(253,219,199)',\r\n          0.8,\r\n          'rgb(239,138,98)',\r\n          1,\r\n          'rgb(178,24,43)'\r\n        ],\r\n        // Adjust the heatmap radius by zoom level\r\n        'heatmap-radius': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          2,\r\n          9,\r\n          20\r\n        ],\r\n        // Transition from heatmap to circle layer by zoom level\r\n        'heatmap-opacity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          1,\r\n          9,\r\n          0\r\n        ]\r\n      }\r\n    },\r\n      'waterway-label');\r\n    let pulsingDot = new _PulsingPointControl();\r\n    map.addImage('pulsing-dot', pulsingDot, { pixelRatio: 2 });\r\n    map.addLayer({\r\n      id: \"earthIcon\",\r\n      type: \"symbol\",\r\n      source: 'earthquakes',\r\n      layout: {\r\n        'icon-image': 'pulsing-dot'\r\n      },\r\n    });\r\n\r\n    map.addLayer(\r\n      {\r\n        'id': 'earthquakes-point',\r\n        'type': 'circle',\r\n        'source': 'earthquakes',\r\n        'minzoom': 7,\r\n        'paint': {\r\n          // Size circle radius by earthquake magnitude and zoom level\r\n          'circle-radius': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['zoom'],\r\n            7,\r\n            ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],\r\n            16,\r\n            ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]\r\n          ],\r\n          // Color circle by earthquake magnitude\r\n          'circle-color': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['get', 'mag'],\r\n            1,\r\n            'rgba(33,102,172,0)',\r\n            2,\r\n            'rgb(103,169,207)',\r\n            3,\r\n            'rgb(209,229,240)',\r\n            4,\r\n            'rgb(253,219,199)',\r\n            5,\r\n            'rgb(239,138,98)',\r\n            6,\r\n            'rgb(178,24,43)'\r\n          ],\r\n          'circle-stroke-color': 'white',\r\n          'circle-stroke-width': 1,\r\n          // Transition from heatmap to circle layer by zoom level\r\n          'circle-opacity': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['zoom'],\r\n            7,\r\n            0,\r\n            8,\r\n            1\r\n          ]\r\n        }\r\n      },\r\n      'waterway-label'\r\n    );\r\n  }\r\n  function removeEarthquake() {\r\n\r\n\r\n    if (map.getLayer(\"earthquakes-point\") && map.getLayer(\"earthquakes-heat\")) {\r\n      map.removeLayer('earthquakes-point')\r\n      map.removeLayer(\"earthquakes-heat\");\r\n      map.removeLayer(\"earthIcon\")\r\n\r\n    }\r\n    if (map.getSource(\"earthquakes\")) {\r\n      map.removeSource(\"earthquakes\");\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction addCluster(map) {\r\n  let earthquakes = 'earthquakesCluster'\r\n  if (!map.getSource(earthquakes)) {\r\n    map.addSource(earthquakes, {\r\n      type: 'geojson',\r\n      // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\r\n      // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\r\n      data: earthquakedata,\r\n      cluster: true,\r\n      clusterMaxZoom: 14, // Max zoom to cluster points on\r\n      clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\r\n    });\r\n  }\r\n\r\n\r\n  map.addLayer({\r\n    id: 'clusters',\r\n    type: 'circle',\r\n    source: earthquakes,\r\n    filter: ['has', 'point_count'],\r\n    paint: {\r\n      // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n      // with three steps to implement three types of circles:\r\n      //   * Blue, 20px circles when point count is less than 100\r\n      //   * Yellow, 30px circles when point count is between 100 and 750\r\n      //   * Pink, 40px circles when point count is greater than or equal to 750\r\n      'circle-color': [\r\n        'step',\r\n        ['get', 'point_count'],\r\n        '#51bbd6',\r\n        100,\r\n        '#f1f075',\r\n        750,\r\n        '#f28cb1'\r\n      ],\r\n      'circle-radius': [\r\n        'step',\r\n        ['get', 'point_count'],\r\n        20,\r\n        100,\r\n        30,\r\n        750,\r\n        40\r\n      ]\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'cluster-count',\r\n    type: 'symbol',\r\n    source: earthquakes,\r\n    filter: ['has', 'point_count'],\r\n    layout: {\r\n      'text-field': '{point_count_abbreviated}',\r\n      'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n      'text-size': 12\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'unclustered-point',\r\n    type: 'symble',\r\n    source: earthquakes,\r\n    filter: ['!', ['has', 'point_count']],\r\n\r\n    paint: {\r\n      'circle-color': '#11b4da',\r\n      'circle-radius': 4,\r\n      'circle-stroke-width': 1,\r\n      'circle-stroke-color': '#fff'\r\n    }\r\n  });\r\n\r\n  // inspect a cluster on click\r\n  map.on('click', 'clusters', function (e) {\r\n    var features = map.queryRenderedFeatures(e.point, {\r\n      layers: ['clusters']\r\n    });\r\n    var clusterId = features[0].properties.cluster_id;\r\n    map.getSource(earthquakes).getClusterExpansionZoom(\r\n      clusterId,\r\n      function (err, zoom) {\r\n        if (err) return;\r\n\r\n        map.easeTo({\r\n          center: features[0].geometry.coordinates,\r\n          zoom: zoom\r\n        });\r\n      }\r\n    );\r\n  });\r\n\r\n  // When a click event occurs on a feature in\r\n  // the unclustered-point layer, open a popup at\r\n  // the location of the feature, with\r\n  // description HTML from its properties.\r\n  map.on('click', 'unclustered-point', function (e) {\r\n    var coordinates = e.features[0].geometry.coordinates.slice();\r\n    var mag = e.features[0].properties.mag;\r\n    var tsunami;\r\n\r\n    if (e.features[0].properties.tsunami === 1) {\r\n      tsunami = 'yes';\r\n    } else {\r\n      tsunami = 'no';\r\n    }\r\n\r\n    // Ensure that if the map is zoomed out such that\r\n    // multiple copies of the feature are visible, the\r\n    // popup appears over the copy being pointed to.\r\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n    }\r\n\r\n    new Popup()\r\n      .setLngLat(coordinates)\r\n      .setHTML(\r\n        'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\r\n      )\r\n      .addTo(map);\r\n  });\r\n\r\n  map.on('mouseenter', 'clusters', function () {\r\n    map.getCanvas().style.cursor = 'pointer';\r\n  });\r\n  map.on('mouseleave', 'clusters', function () {\r\n    map.getCanvas().style.cursor = '';\r\n  });\r\n}\r\n\r\nfunction updateMapTitle(map, newtitle) {\r\n  map.VRApp.setState({\r\n    mapTitle: newtitle ? newtitle : \"地图\"\r\n  })\r\n}\r\n\r\nfunction _PulsingPointControl() {\r\n  var size = 200;\r\n\r\n  // implementation of CustomLayerInterface to draw a pulsing dot icon on the map\r\n  // see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info\r\n  var pulsingDot = {\r\n    width: size,\r\n    height: size,\r\n    data: new Uint8Array(size * size * 4),\r\n\r\n    // get rendering context for the map canvas when layer is added to the map\r\n    onAdd: function (map) {\r\n      this._map = map;\r\n      var canvas = document.createElement('canvas');\r\n      canvas.width = this.width;\r\n      canvas.height = this.height;\r\n      this.context = canvas.getContext('2d');\r\n    },\r\n\r\n    // called once before every frame where the icon will be used\r\n    render: function () {\r\n      var duration = 1000;\r\n      var t = (performance.now() % duration) / duration;\r\n\r\n      var radius = (size / 2) * 0.3;\r\n      var outerRadius = (size / 2) * 0.7 * t + radius;\r\n      var context = this.context;\r\n\r\n      // draw outer circle\r\n      context.clearRect(0, 0, this.width, this.height);\r\n      context.beginPath();\r\n      context.arc(\r\n        this.width / 2,\r\n        this.height / 2,\r\n        outerRadius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      context.fillStyle = 'rgba(255, 200, 200,' + (1 - t) + ')';\r\n      context.fill();\r\n\r\n      // draw inner circle\r\n      context.beginPath();\r\n      context.arc(\r\n        this.width / 2,\r\n        this.height / 2,\r\n        radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      context.fillStyle = 'rgba(255, 100, 100, 1)';\r\n      context.strokeStyle = 'white';\r\n      context.lineWidth = 2 + 4 * (1 - t);\r\n      context.fill();\r\n      context.stroke();\r\n\r\n      // update this image's data with data from the canvas\r\n      this.data = context.getImageData(\r\n        0,\r\n        0,\r\n        this.width,\r\n        this.height\r\n      ).data;\r\n\r\n      // continuously repaint the map, resulting in the smooth animation of the dot\r\n      this._map.triggerRepaint();\r\n\r\n      // return `true` to let the map know that the image was updated\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return pulsingDot;\r\n}\r\n\r\nfunction overView(map) {\r\n  let app = map.VRApp;\r\n  let style = 'mapbox://styles/mapbox/light-v10'\r\n  if (app.overview) {\r\n    map.removeControl(app.overview);\r\n    app.overview = undefined;\r\n\r\n  } else {\r\n    app.overview = new Minimap({\r\n      center: map.getCenter(),\r\n      zoom: 2,\r\n      style: style,\r\n    });\r\n    map.addControl(app.overview, 'bottom-left');\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction addRenderDem(map) {\r\n  map.addSource(\"dems\", {\r\n    \"type\": \"raster-dem\",\r\n    \"url\": \"mapbox://mapbox.terrain-rgb\"\r\n\r\n  })\r\n\r\n  map.addLayer({\r\n    'id': \"dem\",\r\n    \"source\": \"dems\",\r\n    'type': 'hillshade',\r\n    'paint': {\r\n      'hillshade-highlight-color': '#0dcae3',\r\n      'hillshade-accent-color': '#0dcae3',\r\n      'hillshade-shadow-color': 'black',\r\n      'hillshade-illumination-direction': 90,\r\n      'hillshade-exaggeration': 0.56,\r\n      'hillshade-illumination-anchor': 'map'\r\n    }\r\n\r\n  })\r\n}\r\n\r\nfunction addTripLayer(map) {\r\n  debugger;\r\n  map.addLayer(tripLayer, 'waterway-label');\r\n}\r\n\r\nexport default {\r\n  addBuilding: addBuilding,\r\n  drawControl,\r\n  addProvince,\r\n  addHexagonLayer,\r\n  addEaseLayer,\r\n  ODFly,\r\n  addHotLayer,\r\n  addCluster,\r\n  overView,\r\n  addRenderDem,\r\n  addTripLayer,\r\n};","import React from 'react';\r\n// import logo from './logo.svg';\r\n\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\n\r\nimport './App.css';\r\nimport './main.css';\r\nimport 'mapbox-gl-controls/theme.css';\r\n\r\nimport StylesControl from 'mapbox-gl-controls/lib/styles';\r\nimport CompassControl from 'mapbox-gl-controls/lib/compass';\r\nimport ZoomControl from 'mapbox-gl-controls/lib/zoom';\r\nimport InspectControl from 'mapbox-gl-controls/lib/inspect';\r\nimport TooltipControl from 'mapbox-gl-controls/lib/tooltip';\r\n\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\n\r\n\r\n// import MsgBox from './MsgBox';\r\nimport Toolbar from './ToolBar';\r\n\r\n\r\n\r\n//table react plugin\r\nimport Reactable from 'reactable';\r\nimport './table.css'\r\n// import air from './ne_10m_airports.json'\r\nimport Tools from './Tools';\r\n// mapboxgl.accessToken = 'pk.eyJ1IjoieGlhb21vemkiLCJhIjoiY2tiaDdzbHA0MDJzbjJ5bHM0c2NpbjM4aSJ9.NkU21q7-8zIGmPvo8gqRZA';\r\n\r\n// require('./plugins/threebox.js')\r\n// import * as Threebox from \"./plugins/threebox\";\r\n// console.log(window)\r\nfunction DrawCrtl(props) {\r\n\r\n  return (\r\n    <div>\r\n      <p>测量结果</p>\r\n      <div id=\"calculated-area\"></div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction MapTitle(props) {\r\n  return (\r\n\r\n    <div id=\"map-title\">{props.title}</div>\r\n\r\n  )\r\n}\r\n\r\nvar Table = Reactable.Table;\r\n\r\nfunction TableContainer(props) {\r\n\r\n  if (props.tableshow) {\r\n    return <Table className=\"table\" data={props.featuredata} />\r\n  }\r\n  return <br></br>\r\n\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // app: {},\r\n      featuredata: [\r\n        { \"fafa\": \"fadsfads\" },\r\n        { \"fadfaf\": \"fadsfd\" }\r\n      ],\r\n      tableshow: false,\r\n      mapTitle: \"中国地图\"\r\n    }\r\n    // this.hideDrawBox = this.hideDrawBox.bind(this);\r\n    // this.showDrawBox = this.showDrawBox.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"map\"></div>\r\n        <div id=\"calculation-box\" className=\"calculation-box\" style={{ visibility: \"hidden\" }}>\r\n          <DrawCrtl />\r\n\r\n        </div>\r\n        <TableContainer tableshow={this.state.tableshow} featuredata={this.state.featuredata} />\r\n        <canvas id=\"deck-canvas\" className=\"trcl\"></canvas>\r\n        <MapTitle className='mapTitle' title={this.state.mapTitle} />\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    console.log(this,'Did Mount')\r\n\r\n    if (!mapboxgl.supported()) {\r\n      alert('Your browser does not support Mapbox GL');\r\n      return;\r\n    }\r\n    let me = this;\r\n    // console.log({...Threebox})    \r\n    const app = {\r\n      start: function () {\r\n        this.initMap();\r\n        this.initControls();\r\n      },\r\n\r\n      initMap: function () {\r\n        const INITIAL_VIEW_STATE = {\r\n          latitude: 106,\r\n          longitude: 30,\r\n          zoom: 4,\r\n          bearing: 0,\r\n          pitch: 45\r\n        };\r\n\r\n\r\n        const style = {\r\n          \"streets\": 'mapbox://styles/mapbox/streets-v11',\r\n          \"light\": 'mapbox://styles/mapbox/light-v10',\r\n          \"dark\": 'mapbox://styles/mapbox/dark-v10',\r\n          \"satelite-streets\": 'mapbox://styles/mapbox/satellite-streets-v11',\r\n          \"navi_day\": 'mapbox://styles/mapbox/navigation-guidance-day-v4',\r\n          'hillshading': 'mapbox://styles/mapbox/cjaudgl840gn32rnrepcb9b9g',\r\n          'mymap': 'mapbox://styles/xiaomozi/ckbiw7e9v004y1ip4ookctquy'\r\n        };\r\n\r\n        var mytoken = 'pk.eyJ1IjoieGlhb21vemkiLCJhIjoiY2tibTNoeTd1MGhkcjJycG85aW55MzdjeiJ9.yxRH4UcmeNF0HR1VdNMFIQ'\r\n        // mapboxgl.accessToken = 'pk.eyJ1Ijoiemh1d2VubG9uZyIsImEiOiJjazdhNGF6dzIwd3V0M21zNHU1ejZ1a3Q4In0.VkUeaPhu-uMepNBOMc_UdA';\r\n        mapboxgl.accessToken = mytoken;\r\n        // const app = {};\r\n        const map = new mapboxgl.Map({\r\n          container: \"map\",\r\n          style: style.mymap, // stylesheet location\r\n          center: [106, 30.0], // starting position [lng, lat]\r\n          // zoom: 18,// starting zoom\r\n          // interactive:false,\r\n          zoom: INITIAL_VIEW_STATE.zoom,\r\n          bearing: INITIAL_VIEW_STATE.bearing,\r\n          pitch: INITIAL_VIEW_STATE.pitch\r\n        });\r\n        this.map = map;\r\n        this.style = style;\r\n        map.VRApp = me;\r\n\r\n        // console.log(map);\r\n\r\n        map.on('click', () => {\r\n          me.setState({ tableshow: false })\r\n        })\r\n\r\n        map.on('load', (e) => {\r\n\r\n          map.addLayer({\r\n            id: 'three_layer',\r\n            type: 'custom',\r\n            renderingMode: '3d',\r\n            onAdd: function (map, mbxContext) {\r\n              this._map = map;\r\n\r\n              this.tb = {};\r\n              this.tb = new window.Threebox(\r\n                map,\r\n                mbxContext,\r\n                { defaultLights: true }\r\n              );\r\n              //instantiate a red sphere and position it at the origin lnglat\r\n              var sphere = this.tb.sphere({ radius: 1000, color: 'red', material: 'MeshStandardMaterial' })\r\n                .setCoords([106, 30.0]);\r\n              sphere.name = 'redball';\r\n              var sphere2 = this.tb.sphere({ radius: 1000, color: 0x0000ff, specular: 0x4488ee, shininess: 120, material: 'MeshPhongMaterial' })\r\n                .setCoords([107, 30.0]);\r\n\r\n              // add sphere to the scene\r\n              this.tb.add(sphere);\r\n              this.tb.add(sphere2);\r\n              // console.log(this,'ddd');\r\n\r\n              return map;\r\n            },\r\n            onRemove: function (map, mbxContext) {\r\n\r\n              this.tb = {};\r\n\r\n            },\r\n            _getcolor: function () {\r\n              return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n            },\r\n            render: function (gl, matrix) {\r\n              // let ball = window.tb.world.children.filter((mesh) => mesh.name == 'redball');\r\n              // ball[0].material.color.set(this._getcolor());\r\n\r\n              this.tb.update();\r\n            }\r\n          });\r\n\r\n          // map.on('click', (e) => {\r\n            // e.preventDefault();\r\n            // const tb = map.getLayer('three_layer').implementation.tb;\r\n            // const meshball = tb.world.children[0];\r\n            \r\n          // })\r\n\r\n        })\r\n\r\n\r\n      },\r\n\r\n      initControls: function () {\r\n        let map = this.map;\r\n        let style = this.style;\r\n        const geocoder = new MapboxGeocoder({\r\n          accessToken: mapboxgl.accessToken,\r\n          mapboxgl: mapboxgl\r\n        });\r\n        map.addControl(geocoder)\r\n\r\n        map.addControl(new StylesControl({\r\n          styles: [\r\n            {\r\n              label: 'Streets',\r\n              styleName: 'Mapbox Streets',\r\n              styleUrl: 'mapbox://styles/mapbox/streets-v9',\r\n            }, {\r\n              label: 'Satellite',\r\n              styleName: 'Satellites',\r\n              styleUrl: 'mapbox://styles/mapbox/satellite-v9',\r\n            },\r\n            {\r\n              label: \"白天模式\",\r\n              tyleName: \"light\",\r\n              styleUrl: \"mapbox://styles/mapbox/light-v10\"\r\n            },\r\n            {\r\n              label: \"夜间模式\",\r\n              styleName: \"dark\",\r\n              styleUrl: style.dark\r\n            }, {\r\n              label: \"渲染\",\r\n              styleName: 'render',\r\n              styleUrl: style.hillshading\r\n            }\r\n          ],\r\n          onChange: (style) => {\r\n            // debugger;\r\n            // var layers = map.getStyle();\r\n\r\n            // layers = layers.layers;\r\n            // console.log(layers);\r\n            // console.log(style);\r\n            // map.setStyle(style.styleUrl);\r\n            // map.moveLayer()\r\n          },\r\n        }), 'bottom-right');\r\n\r\n        map.addControl(new CompassControl(), 'top-right');\r\n        // // map.addControl(new mapboxgl.NavigationControl());\r\n        map.addControl(new ZoomControl(), 'top-right');\r\n\r\n        // map.addControl(new InspectControl(), 'bottom-right');\r\n        // // map.addControl(new TooltipControl({ layer: '$fill' }));\r\n\r\n        var scale = new mapboxgl.ScaleControl({\r\n          maxWidth: 80,\r\n          unit: 'imperial'\r\n\r\n        });\r\n        map.addControl(scale);\r\n        scale.setUnit('metric');\r\n\r\n        const tool = new Toolbar();\r\n        map.addControl(tool);\r\n        tool.addTool(\"筑\", Tools.addBuilding);\r\n        tool.addTool(\"事\", Tools.addHexagonLayer);\r\n        tool.addTool('迁', Tools.addEaseLayer);\r\n        tool.addTool('飞', Tools.ODFly);\r\n        tool.addTool('热', Tools.addHotLayer);\r\n        tool.addTool(\"聚\", Tools.addCluster);\r\n        tool.addTool(\"省\", Tools.addProvince);\r\n        // tool.addTool(\"trip\", Tools.addTripLayer);\r\n\r\n\r\n        tool.addTool(\"量\", Tools.drawControl);\r\n        tool.addTool('瞰', Tools.overView);\r\n        tool.addTool(\"始\", () => window.location.href = \"/\")\r\n\r\n\r\n      }\r\n    };\r\n\r\n    app.start();\r\n\r\n  }\r\n\r\n//  componentWillUnmount(){\r\n//   console.log(this,'Will unmount')\r\n\r\n//  }\r\n\r\n//  shouldComponentUpdate(){\r\n//    return false;\r\n//  }\r\n\r\n//   componentWillUpdate(){\r\n//     console.log(this,'Will update')\r\n//     this.setState({mapTitle:\"map will update\"}) //引发死循环\r\n//     // this.shouldComponentUpdate()\r\n//     // return false;\r\n\r\n//   }\r\n\r\n\r\n  componentDidUpdate(){\r\n    console.log(this,'Did update')\r\n    // this.setState({mapTitle:\"map did update\"}) //引发死循环\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}